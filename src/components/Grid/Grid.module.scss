@import '../../../styles/variables.scss';
@import '../../../styles/media.scss';

.container {
  margin: 0 auto;
  min-width: 20rem;

  @each $size, $count in $grid-columns {
    $width: map_get($grid-container-width, $size);
    $margin: map_get($grid-margin, $size);

    @include media-query($size) {
      width: 100%;
      max-width: $width;
      padding-left: $margin;
      padding-right: $margin;
    }
  }
}

.row {
  display: flex;
  flex-wrap: wrap;

  @each $size, $count in $grid-columns {
    $gutter: map_get($grid-gutter, $size);
    @include media-query($size) {
      margin-left: $gutter / -2;
      margin-right: $gutter / -2;
    }
  }
}

.col {
  display: flex;
  flex-direction: column;

  &_start {
    justify-content: flex-start;
  }
  &_center {
    justify-content: center;
  }
  &_end {
    justify-content: flex-end;
  }

  @each $size, $count in $grid-columns {
    $gutter: map_get($grid-gutter, $size);
    $width: map_get($grid-column-width, $size);

    @include media-query($size) {
      padding-left: $gutter / 2;
      padding-right: $gutter / 2;

      @for $n from 1 through $count {
        @if $size != 'xs' {
          &_#{$size}_#{$n} {
            width: #{$n * ($width + $gutter)};
          }
          &_#{$size}_o#{$n} {
            margin-left: #{$n * ($width + $gutter)};
          }
        } @else {
          &_#{$size}_#{$n} {
            width: #{$n / $count * 100}#{'%'};
          }
          &_#{$size}_o#{$n} {
            margin-left: #{$n / $count * 100}#{'%'};
          }
        }
      }
    }
  }
}
